"""Modify deals table for project type and multiple attachments

Revision ID: bf201ab821a4
Revises: acbffcf293e0
Create Date: 2025-10-13 09:47:06.596882
"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "bf201ab821a4"
down_revision: Union[str, Sequence[str], None] = "acbffcf293e0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# Define enums once and re-use them
projecttype = postgresql.ENUM(
    "NEW_PROJECT", "RENOVATION", name="projecttype", create_type=False
)
dealattachmenttype = postgresql.ENUM(
    "INITIAL_BRIEF", "FLOOR_PLAN", "AS_BUILT", name="dealattachmenttype", create_type=False
)

def upgrade() -> None:
    bind = op.get_bind()

    # 1) Create enum types if missing
    projecttype.create(bind, checkfirst=True)
    dealattachmenttype.create(bind, checkfirst=True)

    # 2) Add new column with a temporary default so existing rows pass NOT NULL
    op.add_column(
        "deals",
        sa.Column("project_type", projecttype, nullable=False, server_default="NEW_PROJECT"),
    )

    # 3) Create the new attachments table using the already-created enum
    op.create_table(
        "deal_attachments",
        sa.Column("id", sa.Integer(), primary_key=True, nullable=False),
        sa.Column("deal_id", sa.Integer(), sa.ForeignKey("deals.id"), nullable=False),
        sa.Column("blob_url", sa.Text(), nullable=False),
        sa.Column("file_name", sa.String(), nullable=False),
        sa.Column("attachment_type", dealattachmenttype, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
    )

    # 4) Drop old single-file link columns
    op.drop_column("deals", "floor_plan_link")
    op.drop_column("deals", "initial_brief_link")
    op.drop_column("deals", "as_built_link")

    # 5) Remove the temporary default
    op.alter_column("deals", "project_type", server_default=None)


def downgrade() -> None:
    bind = op.get_bind()

    # 1) Recreate old columns
    op.add_column("deals", sa.Column("as_built_link", sa.Text(), nullable=True))
    op.add_column("deals", sa.Column("initial_brief_link", sa.Text(), nullable=True))
    op.add_column("deals", sa.Column("floor_plan_link", sa.Text(), nullable=True))

    # 2) Drop the attachments table (must happen before dropping its enum)
    op.drop_table("deal_attachments")

    # 3) Drop the new column
    op.drop_column("deals", "project_type")

    # 4) Drop enum types if nothing else uses them
    dealattachmenttype.drop(bind, checkfirst=True)
    projecttype.drop(bind, checkfirst=True)



# """Modify deals table for project type and multiple attachments

# Revision ID: bf201ab821a4
# Revises: acbffcf293e0
# Create Date: 2025-10-13 09:47:06.596882

# """
# from typing import Sequence, Union

# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision: str = 'bf201ab821a4'
# down_revision: Union[str, Sequence[str], None] = 'acbffcf293e0'
# branch_labels: Union[str, Sequence[str], None] = None
# depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     """Upgrade schema."""
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('deal_attachments',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('deal_id', sa.Integer(), nullable=False),
#     sa.Column('blob_url', sa.Text(), nullable=False),
#     sa.Column('file_name', sa.String(), nullable=False),
#     sa.Column('attachment_type', sa.Enum('INITIAL_BRIEF', 'FLOOR_PLAN', 'AS_BUILT', name='dealattachmenttype'), nullable=False),
#     sa.Column('created_at', sa.DateTime(), nullable=True),
#     sa.ForeignKeyConstraint(['deal_id'], ['deals.id'], ),
#     sa.PrimaryKeyConstraint('id')
#     )
#     op.add_column('deals', sa.Column('project_type', sa.Enum('NEW_PROJECT', 'RENOVATION', name='projecttype'), nullable=False))
#     op.drop_column('deals', 'floor_plan_link')
#     op.drop_column('deals', 'initial_brief_link')
#     op.drop_column('deals', 'as_built_link')
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     """Downgrade schema."""
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.add_column('deals', sa.Column('as_built_link', sa.TEXT(), autoincrement=False, nullable=True))
#     op.add_column('deals', sa.Column('initial_brief_link', sa.TEXT(), autoincrement=False, nullable=True))
#     op.add_column('deals', sa.Column('floor_plan_link', sa.TEXT(), autoincrement=False, nullable=True))
#     op.drop_column('deals', 'project_type')
#     op.drop_table('deal_attachments')
#     # ### end Alembic commands ###
