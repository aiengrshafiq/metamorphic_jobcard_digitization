"""Add Project, Engineer, Supervisor, and Foreman models

Revision ID: 8c0147ce258d
Revises: 7ed2b3f819f9
Create Date: 2025-09-06 10:52:54.116452

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8c0147ce258d'
down_revision: Union[str, Sequence[str], None] = '7ed2b3f819f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('foremen',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_foremen_id'), 'foremen', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('site_engineers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_site_engineers_id'), 'site_engineers', ['id'], unique=False)
    op.create_table('supervisors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_supervisors_id'), 'supervisors', ['id'], unique=False)
    op.add_column('job_cards', sa.Column('project_id', sa.Integer(), nullable=False))
    op.add_column('job_cards', sa.Column('site_engineer_id', sa.Integer(), nullable=False))
    op.add_column('job_cards', sa.Column('supervisor_id', sa.Integer(), nullable=False))
    op.add_column('job_cards', sa.Column('foreman_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'job_cards', 'foremen', ['foreman_id'], ['id'])
    op.create_foreign_key(None, 'job_cards', 'site_engineers', ['site_engineer_id'], ['id'])
    op.create_foreign_key(None, 'job_cards', 'projects', ['project_id'], ['id'])
    op.create_foreign_key(None, 'job_cards', 'supervisors', ['supervisor_id'], ['id'])
    op.drop_column('job_cards', 'foreman')
    op.drop_column('job_cards', 'site_engineer')
    op.drop_column('job_cards', 'supervisor')
    op.drop_column('job_cards', 'project_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('job_cards', sa.Column('project_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('job_cards', sa.Column('supervisor', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('job_cards', sa.Column('site_engineer', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('job_cards', sa.Column('foreman', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'job_cards', type_='foreignkey')
    op.drop_constraint(None, 'job_cards', type_='foreignkey')
    op.drop_constraint(None, 'job_cards', type_='foreignkey')
    op.drop_constraint(None, 'job_cards', type_='foreignkey')
    op.drop_column('job_cards', 'foreman_id')
    op.drop_column('job_cards', 'supervisor_id')
    op.drop_column('job_cards', 'site_engineer_id')
    op.drop_column('job_cards', 'project_id')
    op.drop_index(op.f('ix_supervisors_id'), table_name='supervisors')
    op.drop_table('supervisors')
    op.drop_index(op.f('ix_site_engineers_id'), table_name='site_engineers')
    op.drop_table('site_engineers')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_foremen_id'), table_name='foremen')
    op.drop_table('foremen')
    # ### end Alembic commands ###
